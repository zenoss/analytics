#! /usr/bin/env bash
#
# zenoss_upgrade_pre
#
# This script is intended to be run before the zenoss processes have
# been started for the first time after an upgrade.
#
# Note: it is run by root
#
##############################################################################
# 
# Copyright (C) Zenoss, Inc. 2007, all rights reserved.
# 
# This content is made available according to terms specified in
# License.zenoss under the directory where your Zenoss product is installed.
# 
##############################################################################


# Defaults

default_zendshome=/opt/zends
default_zendsport=13306

# environment variables
# when we are upgrading and have zends installed
# update our global conf to use those ports
if [ -f /etc/profile.d/zends_env.sh ]; then
    source /etc/profile.d/zends_env.sh
    if [ "${USE_ZENDS}" = "1" ] ; then
        # Only make changes to Zenoss global.conf if ZenDS is installed
        # locally (assuming that $ZENDS/etc/zends.cnf implies a locally
        # installed ZenDS).
        if [ -z "$ZENDSHOME" ] ; then
            if [ -d "${default_zendshome}" ] ; then
                ZENDSHOME=${default_zendshome}
            fi
        fi
        if [ -f "$ZENDSHOME/etc/zends.cnf" ] ; then
            socket=`$ZENDSHOME/bin/my_print_defaults --defaults-file=$ZENDSHOME/etc/zends.cnf mysql client | grep "\-\-socket=" | head -1 | cut -f2 -d'='`
            if [ ! -z "${socket}" ] ; then
                $ZENHOME/bin/python $ZENHOME/bin/zenglobalconf -u zodb-socket=${socket}
            fi
            port=`$ZENDSHOME/bin/my_print_defaults --defaults-file=$ZENDSHOME/etc/zends.cnf mysql client | grep "\-\-port=" | cut -f2 -d'='`
            if [ -z "${port}" ] ; then
                port=${default_zendsport}
            fi
            $ZENHOME/bin/python $ZENHOME/bin/zenglobalconf -u zep-port=${port} zodb-port=${port}
        fi
    fi
fi

# load startup parameters
. ${ZENHOME}/bin/zenoss_startup_config

# load the installation functions
. ${ZENHOME}/bin/shared-functions.sh
. ${ZENHOME}/bin/install-functions.sh

# Confirm Sun/Oracle flavored jre
confirm_jre

# Confirm installed RRDtool
confirm_rrd

# set the python shebang to be the proper python
shebang

# Restrict permissions on existing config files.
find ${ZENHOME}/etc -type f \( -name '*.conf' -o -name 'hubpasswd' \) \
 -exec chmod go-rwx {} \;

# copy the etc/*.conf.example files to etc/*.conf if etc/*.conf don't
# already exist (we don't want to clobber people's configs)
update_conf_files

# if this is an upgrade from 3.X
if ! grep -q '%import relstorage' $ZENHOME/etc/zope.conf; then
    # update/migrate zodb
    create_zodb_db

    # Move from ZODB to MySQL
    #NOTE: runuser is set in zenoss_startup_config
    su $RUNUSER -l -c "$ZENHOME/bin/python $ZENHOME/bin/changeObjectStore.py --host \"$ZODB_HOST\" --port \"$ZODB_PORT\" --user \"$ZODB_USER\" --passwd \"$ZODB_PASSWORD\" --db \"$ZODB_DB\" --admin-user \"$ZODB_ADMIN_USER\" --admin-password \"$ZODB_ADMIN_PASSWORD\" --socket \"$ZODB_SOCKET\"  2>&1 | egrep -v \"For help, use ${ZENHOME}/bin/zeoctl -h|Error: no program specified; use -p or -C\""
fi

# Upgrade < 4.2 config files to 4.2 syntax
upgrade_conf_options_42

# reload startup parameters
. ${ZENHOME}/bin/zenoss_startup_config

# version 2.1.1 and below used the system python, but in 2.1.70 we
# started shipping our own.  replace the old scripts with references
# to the new python

# zenstatus was updated in Avalon to remove the command-line
# option 'configpath'
sed -i -e 's/[ \t]*configpath .*//' $ZENHOME/etc/zenstatus.conf

# restart external server daemons
if [ "${ZODB_HOST}" = "localhost" ];then
    check_mysql
fi

# start/configure amqp/rabbitmq if configured to run locally
if is_amqp_local ; then
    # start it
    start_rabbitmq

    # Update AMQP configuration files
    configure_amqp
fi

if ! confirm_amqp_connectivity ; then
    fail "Failed connecting to rabbitmq"
fi

# patch any ZenPack code that isn't compatible with this version of core
. ${ZENHOME}/bin/zenoss_upgrade_patch_zenpacks.sh

# create the ZEP database
create_zep_db

# TODO: Migrate ZEP database

# Remove previous ZEP configuration settings
remove_zep_jdbc_config


# create the session database (It is always safe to remove and rebuild the sessions database)
create_zodb_session_db

# Patch zopectl and runzope to accept config files
patch_zopectl_and_runzope

# Upgrade to persistent sessions if necessary
upgrade_to_persistent_sessions

# If the zenwinperf primitive is associated with the obsolete ZenWinPerf zenpack (as of Zenoss 4.2),
# remove it so it doesn't throw an error.  It will get reinstalled as part of the uplevel WindowsMonitor egg.
if [ -f ${ZENHOME}/ZenPacks/ZenPacks.zenoss.ZenWinPerf*/ZenPacks/zenoss/ZenWinPerf/daemons/zenwinperf ];then
	rm ${ZENHOME}/ZenPacks/ZenPacks.zenoss.ZenWinPerf*/ZenPacks/zenoss/ZenWinPerf/daemons/zenwinperf
	if [ -f ${ZENHOME}/bin/zenwinperf -o -L ${ZENHOME}/bin/zenwinperf ];then
		rm ${ZENHOME}/bin/zenwinperf 
	fi
fi

# fix any accidental or otherwise changes to ownership/perms in ZENHOME
fix_zenhome_owner_and_group ${OS_USERNAME}

# migrate the zeo database
run_zenmigrate
