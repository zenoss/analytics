<?xml version="1.0"?>
<!--
##############################################################################
#
# Copyright (C) Zenoss, Inc. 2009, all rights reserved.
#
# This content is made available according to terms specified in
# License.zenoss under the directory where your Zenoss product is installed.
#
##############################################################################
-->


<!--
<configure xmlns="http://namespaces.zope.org/zope"
           xmlns:five="http://namespaces.zope.org/five">
-->
<configure xmlns="http://namespaces.zope.org/zope">

	<class class="Products.ZenModel.OSProcessClass.OSProcessClass">
        <implements interface=".interfaces.IProcessEntity" />
	</class>

	<class class="Products.ZenModel.OSComponent.OSComponent">
        <implements interface=".interfaces.IComponent" />
	</class>

	<class class="Products.ZenModel.HWComponent.HWComponent">
        <implements interface=".interfaces.IComponent" />
	</class>

	<class class="Products.ZenModel.OSProcessOrganizer.OSProcessOrganizer">
        <implements interface=".interfaces.IProcessEntity" />
	</class>

	<class class="Products.ZenModel.ServiceClass.ServiceClass">
        <implements interface=".interfaces.IServiceEntity" />
	</class>

	<class class="Products.ZenModel.ServiceOrganizer.ServiceOrganizer">
        <implements interface=".interfaces.IServiceEntity" />
	</class>

	<class class="Products.ZenModel.MibOrganizer.MibOrganizer">
        <implements interface=".interfaces.IMibEntity" />
	</class>

	<class class="Products.ZenModel.MibModule.MibModule">
        <implements interface=".interfaces.IMibEntity" />
	</class>

	<class class="Products.ZenModel.Device.Device">
        <implements interface=".interfaces.IDevice" />
	</class>

	<class class="Products.ZenModel.GraphDefinition.GraphDefinition">
        <implements interface=".interfaces.IMarshallable" />
	</class>

	<class class="Products.Zuul.infos.metricserver.MetricServiceGraph">
        <implements interface=".interfaces.IMarshallable" />
	</class>

    <adapter factory=".facades.UserFacade"
             provides=".interfaces.IUserFacade"
             name="user"
             for="*"
             />
    
    <utility component=".utils.get_dmd"
             provides=".interfaces.IDataRootFactory"
             />

    <adapter provides=".interfaces.IUnmarshaller"
             for=".interfaces.IMarshallable"
             factory=".marshalling.DefaultUnmarshaller"
             />

    <adapter provides=".interfaces.IMarshaller"
             for=".interfaces.IMarshallable"
             factory=".marshalling.Marshaller"
             />

    <adapter provides=".interfaces.IMarshaller"
             for=".interfaces.IInfo"
             factory=".marshalling.InfoMarshaller"
             />

    <adapter provides=".interfaces.IMarshaller"
             for=".interfaces.IMetricServiceGraphDefinition"
             factory=".marshalling.Marshaller"
             />

    <adapter provides=".interfaces.IMarshaller"
             for=".interfaces.ITreeNode"
             factory=".marshalling.TreeNodeMarshaller"
             />


    <adapter provides=".interfaces.ICatalogTool"
             for="*"
             factory=".tree.CatalogTool"
             />

    <adapter provides=".interfaces.IAuthorizationTool"
             factory=".security.AuthorizationTool"
             for="*"
             />

    <include package=".facades"/>
    <include package=".routers"/>
    <include package=".catalog"/>
    <include package=".search"/>
    <include package=".form"/>
    <include package=".infos"/>
    <include package=".security"/>

</configure>
