<?xml version="1.0"?>
<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:meta="http://namespaces.zope.org/meta">

    <adapter factory = ".global_catalog.IndexableWrapper"/>
    <adapter factory = ".global_catalog.ComponentWrapper"/>
    <adapter factory = ".global_catalog.DeviceWrapper"/>

    <meta:provides feature="searchOrganizers" />
    <adapter factory = ".global_catalog.DeviceOrganizerWrapper"/>

    <adapter
        provides=".interfaces.IIndexableWrapper"
        factory=".global_catalog.IpInterfaceWrapper"
        for="Products.ZenModel.IpInterface.IpInterface"
        />

    <adapter
        provides=".interfaces.IIndexableWrapper"
        factory=".global_catalog.FileSystemWrapper"
        for="Products.ZenModel.FileSystem.FileSystem"
        />

    <adapter
        factory = ".paths.DefaultPathReporter"
        for = ".interfaces.IGloballyIndexed"
        provides = ".interfaces.IPathReporter"
        />

    <adapter
        factory = ".paths.DevicePathReporter"
        for = "Products.ZenModel.Device.Device"
        provides = ".interfaces.IPathReporter"
        />

    <adapter
        factory = ".paths.ServicePathReporter"
        for = "Products.ZenModel.Service.Service"
        provides = ".interfaces.IPathReporter"
        />

    <adapter
        factory = ".paths.InterfacePathReporter"
        for = "Products.ZenModel.IpInterface.IpInterface"
        provides = ".interfaces.IPathReporter"
        />

    <adapter
        factory = ".paths.IpAddressPathReporter"
        for = "Products.ZenModel.IpAddress.IpAddress"
        provides = ".interfaces.IPathReporter"
        />

    <adapter
        factory = ".paths.ProcessPathReporter"
        for = "Products.ZenModel.OSProcess.OSProcess"
        provides = ".interfaces.IPathReporter"
        />

    <adapter
        factory = ".paths.ProductPathReporter"
        for = "Products.ZenModel.Software.Software"
        provides = ".interfaces.IPathReporter"
        />

    <class class="Products.ZenModel.ZenModelRM.ZenModelRM">
        <implements interface=".interfaces.IGloballyIndexed" />
    </class>

    <class class="Products.ZenModel.Service.Service">
        <implements interface=".interfaces.ITreeSpanningComponent" />
    </class>

    <class class="Products.ZenModel.IpInterface.IpInterface">
        <implements interface=".interfaces.ITreeSpanningComponent" />
    </class>

    <class class="Products.ZenModel.OSProcess.OSProcess">
        <implements interface=".interfaces.ITreeSpanningComponent" />
    </class>

    <class class="Products.ZenModel.IpAddress.IpAddress">
        <implements interface=".interfaces.ITreeSpanningComponent" />
    </class>

    <class class="Products.ZenModel.DeviceGroup.DeviceGroup">
        <implements interface=".interfaces.IDeviceOrganizer" />
    </class>

    <class class="Products.ZenModel.Location.Location">
        <implements interface=".interfaces.IDeviceOrganizer" />
    </class>

    <class class="Products.ZenModel.System.System">
        <implements interface=".interfaces.IDeviceOrganizer" />
    </class>

    <subscriber handler=".events.onIndexingEvent"/>
    <subscriber handler=".events.onObjectRemoved"/>
    <subscriber handler=".events.onObjectAdded"/>
    <subscriber handler=".events.onObjectMoved"/>
    <subscriber handler=".events.onTreeSpanningComponentBeforeDelete"/>
    <subscriber handler=".events.onOrganizerBeforeDelete"/>
    <subscriber handler=".events.onTreeSpanningComponentAfterAddOrMove"/>

    <meta:provides feature="componentCatalogs" />

    <subscriber handler=".component_catalog.onComponentIndexingEvent"
        for="Products.ZenModel.DeviceComponent.DeviceComponent
             .interfaces.IIndexingEvent"/>

    <subscriber handler=".component_catalog.onComponentRemoved"
        for="Products.ZenModel.DeviceComponent.DeviceComponent
             OFS.interfaces.IObjectWillBeMovedEvent"/>

    <utility factory="Products.Zuul.catalog.global_catalog.GlobalCatalogFactory"
        provides="Products.Zuul.catalog.interfaces.IGlobalCatalogFactory"
        />

    <adapter provides=".interfaces.IModelCatalogTool"
            for="*"
            factory=".model_catalog_tool.ModelCatalogTool"
        />

    <utility component=".model_catalog.ModelCatalog"
            provides=".interfaces.IModelCatalog"
            name="model_catalog"
        />

</configure>
